{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_20_to_port_22",
                    "sourceNode": "20",
                    "sourcePort": "20_out",
                    "targetNode": "22",
                    "targetPort": "22_in"
                },
                {
                    "id": "port_22_to_port_26",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_27_to_port_31",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_26_to_port_32",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "32",
                    "targetPort": "32_in"
                },
                {
                    "id": "port_32_to_port_31",
                    "sourceNode": "32",
                    "sourcePort": "32_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_33_to_port_34",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_4_to_port_37",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "37",
                    "targetPort": "37_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_37_to_port_13",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_0_to_port_33",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_34_to_port_4",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_13_to_port_20",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "20",
                    "targetPort": "20_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_37_to_port_38",
                    "sourceNode": "37",
                    "sourcePort": "37_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_38_to_port_31",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_39",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_41_to_port_42",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "id": "port_23_to_port_27",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_44_to_port_23",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_44_to_port_46",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "46",
                    "targetPort": "46_in"
                },
                {
                    "id": "port_42_to_port_47",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_47_to_port_44",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_46_to_port_31",
                    "sourceNode": "46",
                    "sourcePort": "46_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_31_to_port_1",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_39_to_port_41",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                }
            ],
            "hash": "3a159269ae99656fc1dfc087cd33229446cb68e6",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {
                        "input_spec": [
                            {
                                "name": "Name is required"
                            }
                        ]
                    },
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 440,
                    "y": -3.907985046680551e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 540,
                    "y": 3015
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "related findings note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "related_findings_note",
                        "id": "13",
                        "parameters": [
                            "run_query_1:action_result.data.*.source",
                            "run_query_1:action_result.data.*.source_event_id"
                        ],
                        "template": "| Detection Name| Finding ID |\n| --- | --- |\n%%\n| {0} | [{1}](https://es8-shw-46d5351519c4f2.stg.splunkcloud.com/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=--7d%40h&latest=now&search={1}){target=\"_blank\"} |\n%%\n\n\n\n\n\n*Follow the prompt to manage these related findings in the Analyst Queue.*",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 260,
                    "y": 780
                },
                "20": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_task_note_1",
                        "id": "20",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": "related_findings_note:formatted_data",
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Related Findings in the Analyst Queue:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 260,
                    "y": 920
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "close findings prompt",
                            "customNameId": 0,
                            "join": []
                        },
                        "approver": {
                            "type": "user",
                            "value": "launching_user"
                        },
                        "functionId": 1,
                        "functionName": "close_findings_prompt",
                        "id": "22",
                        "message": "This Risk Finding under investigation is composed of many related findings and intermediate findings.\n\nYou can browse all these related findings on a risk timeline in the Overview Tab.\n\nPlease select a response below to manage these findings in the Analyst Queue while you continue to work on the investigation.\n\n{0}",
                        "parameters": [
                            "related_findings_note:formatted_data"
                        ],
                        "responseTime": 30,
                        "responses": [
                            {
                                "required": true,
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "Do you want to close these individual findings?",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "prompt",
                    "warnings": {},
                    "x": 260,
                    "y": 1080
                },
                "23": {
                    "data": {
                        "action": "update finding or investigation",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_finding_or_investigation_1",
                        "id": "23",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "Closed - As part of investigation",
                            "finding_time": "",
                            "id": "filtered-data:filter_1:condition_1:get_finding_or_investigation_1:action_result.data.*.finding_id",
                            "status": "Closed"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "enterpriseSecurity",
                    "userCode": "\n    # Write your custom code here...\n    \n\n",
                    "warnings": {},
                    "x": 300,
                    "y": 2160
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "close_findings_prompt:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "Close Yes",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "Close No",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "26",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "decision",
                    "warnings": {},
                    "x": 340,
                    "y": 1236
                },
                "27": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_task_note_2",
                        "id": "27",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 2,
                                "parameters": [
                                    "filtered-data:filter_1:condition_1:get_finding_or_investigation_1:action_result.data.*.finding_id",
                                    "Closed"
                                ],
                                "template": "Based on the positive response of the user prompt to close findings, all related findings have been closed in the Analyst Queue with Disposition as \"Closed - As part of investigation\". The context of all those individual findings is available in this investigation.\n\n\nAll related findings key information has been added to the \"Events\" tab as evidence.\n\nClosed Findings as part of this Investigation:\n\n\n| Finding ID | Status |\n| --- | --- |\n%%\n| {0} | {1} |\n%%\n\n\nOther findings are found to be \"Intermediate Findings\" contributing to this investigation and hence they are not applicable to be closed."
                            },
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Analyst decision to close related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 300,
                    "y": 2280
                },
                "31": {
                    "data": {
                        "action": "update task in current phase",
                        "actionType": "post",
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "add_task_note_2",
                                "add_task_note_3",
                                "add_task_note_4",
                                "add_task_note_5"
                            ]
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_task_in_current_phase_1",
                        "id": "31",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id",
                            "name": "Gather related findings",
                            "order": "",
                            "status": "Ended",
                            "task_id": "get_task_id_1:action_result.data.*.task_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 520,
                    "y": 2520
                },
                "32": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_3",
                        "id": "32",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": "Based on the negative response of the user prompt to close findings, all related findings have NOT been closed in the Analyst Queue.",
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Analyst decision to NOT close related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 520,
                    "y": 2373.5
                },
                "33": {
                    "data": {
                        "action": "get phase id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_phase_id_1",
                        "id": "33",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id",
                            "phase_name": "Preprocess",
                            "response_template_name": "finding:response_plans.*.name"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "33",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 430,
                    "y": 148.99999999999977
                },
                "34": {
                    "data": {
                        "action": "get task id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_task_id_1",
                        "id": "34",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id",
                            "phase_name": "Preprocess",
                            "response_template_name": "finding:response_plans.*.name",
                            "task_name": "Gather related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_name"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "34",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 430,
                    "y": 297.9999999999998
                },
                "37": {
                    "data": {
                        "advanced": {
                            "customName": "findings exist",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "run_query_1:action_result.summary.total_events",
                                        "value": "0"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "findings exists",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "findings dont exist",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "findings_exist",
                        "id": "37",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "37",
                    "type": "decision",
                    "warnings": {},
                    "x": 510,
                    "y": 596
                },
                "38": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "add_task_note_4",
                        "id": "38",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 4,
                                "parameters": [],
                                "template": "There are no individual findings in this investigation as it is comprised of only \"Intermediate Findings\".\n\n\nTo review the Intermediate Findings, check the \"Overview\" tab\n"
                            },
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Related Intermediate Findings in the Analyst Queue:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "38",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 860,
                    "y": 2373.5
                },
                "39": {
                    "data": {
                        "advanced": {
                            "customName": "related findings list",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "related_findings_list",
                        "id": "39",
                        "inputParameters": [
                            "run_query_1:action_result.data.*.source_event_id",
                            "run_query_1:action_result.data.*._time"
                        ],
                        "outputVariables": [
                            "related_findings_id",
                            "related_findings_time"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n\n    related_findings_list__related_findings_id = []\n    related_findings_list__related_findings_time = []\n    \n    for item in run_query_1_result_item_0:\n        phantom.debug(item)\n        if isinstance(item, list):\n            for id in item:\n                related_findings_list__related_findings_id.append(id)\n        else:\n            related_findings_list__related_findings_id.append(item)\n    \n    for item in run_query_1_result_item_1:\n        phantom.debug(item)\n        if isinstance(item, list):\n            for id in item:\n                related_findings_list__related_findings_time.append(id)\n        else:\n            related_findings_list__related_findings_time.append(item)\n    phantom.debug(related_findings_list__related_findings_id)\n    phantom.debug(related_findings_list__related_findings_time)\n",
                    "warnings": {},
                    "x": 180,
                    "y": 1440
                },
                "4": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "attach_result": false,
                            "command": "| from ",
                            "display": "",
                            "end_time": "",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "finding:consolidated_findings.info_min_time",
                                    "finding:consolidated_findings._indextime",
                                    "finding:consolidated_findings.normalized_risk_object",
                                    "finding:consolidated_findings.risk_object_type",
                                    "finding:investigation_id"
                                ],
                                "template": "datamodel Risk.All_Risk \n| search [ | tstats `summariesonly` `common_fbd_fields`, values(All_Risk.threat_object) as threat_object from datamodel=Risk.All_Risk where earliest={0} latest={1} by All_Risk.normalized_risk_object, All_Risk.risk_object_type, index\n| `get_mitre_annotations`\n| rename All_Risk.normalized_risk_object as normalized_risk_object, All_Risk.risk_object_type as risk_object_type\n| `generate_findings_summary`\n| stats list(*) as * limit=1000000, sum(int_risk_score_sum) as risk_score by `fbd_grouping(normalized_risk_object)`\n| `dedup_and_compute_common_fbd_fields`, threat_object=mvdedup(threat_object), risk_object_type=mvdedup(risk_object_type), num_mitre_techniques=mvcount('annotations.mitre_attack'), annotations.mitre_attack=mvdedup('annotations.mitre_attack'), annotations.mitre_attack.mitre_tactic=mvdedup('annotations.mitre_attack.mitre_tactic'), mitre_tactic_id_count=mvcount('annotations.mitre_attack.mitre_tactic'), mitre_technique_id_count=mvcount('annotations.mitre_attack')\n| fillnull value=0 num_mitre_techniques, mitre_tactic_id_count, mitre_technique_id_count, total_event_count, risk_score\n| fields - int_risk_score_sum, int_findings_count, individual_threat_object_count, contributing_event_ids\n| `drop_dm_object_name(\"All_Risk\")`\n| where normalized_risk_object=\"{2}\" AND risk_object_type=\"{3}\"\n| where num_mitre_techniques>3 OR risk_score>100 OR total_event_count>5\n| eval all_finding_ids=mvdedup(finding_ids)\n| fields all_finding_ids\n| mvexpand all_finding_ids\n| rename all_finding_ids AS source_event_id ]\n| `add_events({4})`"
                            },
                            "search_mode": "verbose",
                            "start_time": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 420,
                    "y": 440
                },
                "41": {
                    "data": {
                        "advanced": {
                            "customName": "id list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "id_list",
                        "id": "41",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "related_findings_list:custom_function:related_findings_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "41",
                    "type": "utility",
                    "warnings": {},
                    "x": 180,
                    "y": 1560
                },
                "42": {
                    "data": {
                        "advanced": {
                            "customName": "time list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "time_list",
                        "id": "42",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "related_findings_list:custom_function:related_findings_time"
                            }
                        }
                    },
                    "errors": {},
                    "id": "42",
                    "type": "utility",
                    "warnings": {},
                    "x": 180,
                    "y": 1720
                },
                "44": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "get_finding_or_investigation_1:action_result.data.*.status_name",
                                        "value": "Closed"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "get_finding_or_investigation_1:action_result.data.*.finding_id",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "not closed",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "get_finding_or_investigation_1:action_result.data.*.status_name",
                                        "value": "Closed"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "closed",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "44",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "filter",
                    "warnings": {},
                    "x": 240,
                    "y": 2020
                },
                "46": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 5,
                        "functionName": "add_task_note_5",
                        "id": "46",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 5,
                                "parameters": [
                                    "filtered-data:filter_1:condition_2:get_finding_or_investigation_1:action_result.data.*.finding_id",
                                    "filtered-data:filter_1:condition_2:get_finding_or_investigation_1:action_result.data.*.status_name"
                                ],
                                "template": "| Finding ID | Status |\n| --- | --- |\n%%\n| {0} | {1} |\n%%\n"
                            },
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Previously Closed Findings:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "46",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": -240,
                    "y": 2160
                },
                "47": {
                    "data": {
                        "action": "get finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_finding_or_investigation_1",
                        "id": "47",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "finding_time": "",
                            "id": "id_list:custom_function_result.data.output"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "47",
                    "type": "enterpriseSecurity",
                    "userCode": "\n    # Write your custom code here...\n    #phantom.debug(related_findings_list__related_findings_id)\n    #phantom.debug(related_findings_list__related_findings_time)\n    #parameters = []\n    #for i in range(len(related_findings_list__related_findings_id)):\n    #    parameters.append({\n    #        \"id\": related_findings_list__related_findings_id[i],\n    #        \"finding_time\": related_findings_list__related_findings_time[i],\n    #    })\n\n",
                    "warnings": {},
                    "x": 180,
                    "y": 1860
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "es",
        "python_version": "3",
        "schema": "5.0.15",
        "version": "6.3.1.176"
    },
    "create_time": "2024-12-08T12:39:15.451345+00:00",
    "draft_mode": false,
    "labels": [
        "es_soar_integration"
    ],
    "tags": []
}