{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_22_to_port_26",
                    "sourceNode": "22",
                    "sourcePort": "22_out",
                    "targetNode": "26",
                    "targetPort": "26_in"
                },
                {
                    "id": "port_27_to_port_31",
                    "sourceNode": "27",
                    "sourcePort": "27_out",
                    "targetNode": "31",
                    "targetPort": "31_in"
                },
                {
                    "id": "port_33_to_port_34",
                    "sourceNode": "33",
                    "sourcePort": "33_out",
                    "targetNode": "34",
                    "targetPort": "34_in"
                },
                {
                    "id": "port_41_to_port_42",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                },
                {
                    "id": "port_31_to_port_1",
                    "sourceNode": "31",
                    "sourcePort": "31_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_39_to_port_41",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "id": "port_34_to_port_50",
                    "sourceNode": "34",
                    "sourcePort": "34_out",
                    "targetNode": "50",
                    "targetPort": "50_in"
                },
                {
                    "id": "port_49_to_port_53",
                    "sourceNode": "49",
                    "sourcePort": "49_out",
                    "targetNode": "53",
                    "targetPort": "53_in"
                },
                {
                    "id": "port_53_to_port_4",
                    "sourceNode": "53",
                    "sourcePort": "53_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_1",
                            "index": 0
                        }
                    ],
                    "id": "port_26_to_port_61",
                    "sourceNode": "26",
                    "sourcePort": "26_out",
                    "targetNode": "61",
                    "targetPort": "61_in"
                },
                {
                    "id": "port_4_to_port_33",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "33",
                    "targetPort": "33_in"
                },
                {
                    "id": "port_50_to_port_62",
                    "sourceNode": "50",
                    "sourcePort": "50_out",
                    "targetNode": "62",
                    "targetPort": "62_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_5",
                            "index": 0
                        }
                    ],
                    "id": "port_62_to_port_68",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "68",
                    "targetPort": "68_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_6",
                            "index": 1
                        }
                    ],
                    "id": "port_62_to_port_69",
                    "sourceNode": "62",
                    "sourcePort": "62_out",
                    "targetNode": "69",
                    "targetPort": "69_in"
                },
                {
                    "id": "port_69_to_port_63",
                    "sourceNode": "69",
                    "sourcePort": "69_out",
                    "targetNode": "63",
                    "targetPort": "63_in"
                },
                {
                    "id": "port_0_to_port_49",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "49",
                    "targetPort": "49_in"
                },
                {
                    "id": "port_61_to_port_70",
                    "sourceNode": "61",
                    "sourcePort": "61_out",
                    "targetNode": "70",
                    "targetPort": "70_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_0",
                            "index": 0
                        }
                    ],
                    "id": "port_70_to_port_27",
                    "sourceNode": "70",
                    "sourcePort": "70_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "id": "port_68_to_port_71",
                    "sourceNode": "68",
                    "sourcePort": "68_out",
                    "targetNode": "71",
                    "targetPort": "71_in"
                }
            ],
            "hash": "d038527e33421e72978b510e80677f82a5f2baf9",
            "nodes": {
                "0": {
                    "customCode": "@phantom.playbook_block()\ndef on_start(container):\n    phantom.debug('on_start() called')\n    # call 'refresh_finding_or_investigation_1' block\n    get_finding_or_investigation_1(container=container)\n    return",
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {
                        "input_spec": [
                            {
                                "name": "Name is required"
                            }
                        ]
                    },
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 460,
                    "y": -520
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 540,
                    "y": 3020
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "related findings note",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "related_findings_note",
                        "id": "13",
                        "parameters": [
                            "run_query_1:action_result.data.*.rule_name",
                            "run_query_1:action_result.data.*.event_id",
                            "run_query_1:action_result.data.*.status_label",
                            "run_query_1:action_result.data.*.owner"
                        ],
                        "template": "| Detection | Finding | Status | Owner |\n| --- | --- | --- | --- |\n%%\n| {0} | [{1}](https://i-0e6bc36a44836889b.splunk.show/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=-30d&latest=now&search={1}) | {2} | {3} |\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 780,
                    "y": 160
                },
                "20": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_task_note_1",
                        "id": "20",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 1,
                                "parameters": [
                                    "related_findings_note:formatted_data"
                                ],
                                "template": "{0}\n\n\n\nFollow the prompt to manage these related findings in the Analyst Queue.\n\nMessage prompt name: close_findings_prompt"
                            },
                            "id": "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "refresh_finding_or_investigation_1:action_result.data.*.data.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Related Findings in the Analyst Queue:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "20",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 920,
                    "y": 800
                },
                "22": {
                    "data": {
                        "advanced": {
                            "customName": "close findings prompt",
                            "customNameId": 0,
                            "join": []
                        },
                        "approver": {
                            "type": "user",
                            "value": "launching_user"
                        },
                        "functionId": 1,
                        "functionName": "close_findings_prompt",
                        "id": "22",
                        "message": "This Investigation is composed of many related findings and intermediate findings.\n\nYou can browse all these related findings on a risk timeline in the Overview Tab.\n\nPlease select a response below to manage these findings in the Analyst Queue while you continue to work on the investigation.\n\n\n\n{0}\n",
                        "parameters": [
                            "open_findings_format:custom_function:open_findings_note"
                        ],
                        "responseTime": 30,
                        "responses": [
                            {
                                "required": true,
                                "responseOptions": [
                                    "Yes",
                                    "No"
                                ],
                                "responsePrompt": "Do you want to close these individual findings?",
                                "responseType": "yes/no"
                            }
                        ],
                        "type": "prompt"
                    },
                    "errors": {},
                    "id": "22",
                    "type": "prompt",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 620,
                    "y": 900
                },
                "23": {
                    "data": {
                        "action": "update finding or investigation",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_finding_or_investigation_1",
                        "id": "23",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "disposition:7",
                            "finding_time": "",
                            "id": "included_findings:custom_function:findings_list",
                            "status": "Closed"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "enterpriseSecurity",
                    "userCode": "\n    # Write your custom code here...\n    parameters = []\n\n    if included_findings__findings_list is not None:\n        for item in included_findings__findings_list:\n            parameters.append({\n                \"id\": item,\n                \"status\": \"Closed\",\n                \"disposition\": \"Closed - As part of investigation\",\n                \"finding_time\": \"\",\n            })\n    phantom.debug(parameters)\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 1000,
                    "y": 2020
                },
                "26": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "close_findings_prompt:action_result.summary.responses.0",
                                        "value": "Yes"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_1",
                                "customName": "Close Yes",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_2",
                                "customName": "Close No",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "26",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "26",
                    "type": "decision",
                    "warnings": {},
                    "x": 700,
                    "y": 1020
                },
                "27": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_task_note_2",
                        "id": "27",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 2,
                                "parameters": [
                                    "included_findings:custom_function:findings_list"
                                ],
                                "template": "Based on the positive response of the user prompt to close findings, all related findings have been closed in the Analyst Queue with Disposition as \"Closed - As part of investigation\". The context of all those individual findings is available in this investigation.\n\nThere may be other \"Intermediate Findings\" contributing to this investigation, please review them in the Overview tab"
                            },
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Analyst decision to close related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 620,
                    "y": 1520
                },
                "31": {
                    "data": {
                        "action": "update task in current phase",
                        "actionType": "post",
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "add_task_note_2",
                                "add_task_note_3",
                                "add_task_note_4",
                                "add_task_note_5"
                            ]
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_task_in_current_phase_1",
                        "id": "31",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "name": "Gather related findings",
                            "order": "",
                            "status": "Ended",
                            "task_id": "get_task_id_1:action_result.data.*.task_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "31",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 740,
                    "y": 2640
                },
                "32": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "add_task_note_6",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_6",
                        "id": "32",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": "Based on the negative response of the user prompt to close findings, all related findings have NOT been closed in the Analyst Queue.",
                            "id": "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "refresh_finding_or_investigation_1:action_result.data.*.data.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Analyst decision to NOT close related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "32",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": -100,
                    "y": 2440
                },
                "33": {
                    "data": {
                        "action": "get phase id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_phase_id_1",
                        "id": "33",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_name": "Preprocess",
                            "response_template_name": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.name"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "33",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 440,
                    "y": 140
                },
                "34": {
                    "data": {
                        "action": "get task id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_task_id_1",
                        "id": "34",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_name": "Preprocess",
                            "response_template_name": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.name",
                            "task_name": "Gather related findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_name"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "34",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 440,
                    "y": 280
                },
                "38": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "add_task_note_4",
                        "id": "38",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 4,
                                "parameters": [
                                    "related_findings_note:formatted_data"
                                ],
                                "template": "Below is the summary of included Findings in this Investigation (Intermediate Findings, check the \"Overview\" tab)\n\n{0}\n\n\n\n\n\nCheck the \"Prompt\" to see if there are related Findings that are not \"Closed\" in the Analyst Queue.\n\nIf all the related findings are already \"Closed\", there will be no requests in the \"Prompt\"\n\n\n\n\nMessage prompt name: close_findings_prompt"
                            },
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Related Findings in the Analyst Queue:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "38",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 780,
                    "y": 440
                },
                "39": {
                    "data": {
                        "advanced": {
                            "customName": "related findings list",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "related_findings_list",
                        "id": "39",
                        "inputParameters": [
                            "run_query_1:action_result.data.*.source_event_id",
                            "run_query_1:action_result.data.*._time"
                        ],
                        "outputVariables": [
                            "related_findings_id",
                            "related_findings_time"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "39",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n\n    related_findings_list__related_findings_id = []\n    related_findings_list__related_findings_time = []\n    \n    for item in run_query_1_result_item_0:\n        phantom.debug(item)\n        if isinstance(item, list):\n            for id in item:\n                related_findings_list__related_findings_id.append(id)\n        else:\n            related_findings_list__related_findings_id.append(item)\n    \n    for item in run_query_1_result_item_1:\n        phantom.debug(item)\n        if isinstance(item, list):\n            for id in item:\n                related_findings_list__related_findings_time.append(id)\n        else:\n            related_findings_list__related_findings_time.append(item)\n    phantom.debug(related_findings_list__related_findings_id)\n    phantom.debug(related_findings_list__related_findings_time)\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": -100,
                    "y": 1380
                },
                "4": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "attach_result": false,
                            "command": "",
                            "display": "rule_name, status_label, owner",
                            "end_time": "",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "included_findings:custom_function:finding_id"
                                ],
                                "template": "`notable` | where event_id IN ({0})\n| fields rule_name, event_id, status_label, owner"
                            },
                            "search_mode": "verbose",
                            "start_time": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 440,
                    "y": 20
                },
                "41": {
                    "data": {
                        "advanced": {
                            "customName": "id list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "id_list",
                        "id": "41",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "related_findings_list:custom_function:related_findings_id"
                            }
                        }
                    },
                    "errors": {},
                    "id": "41",
                    "type": "utility",
                    "warnings": {},
                    "x": -200,
                    "y": 1660
                },
                "42": {
                    "data": {
                        "advanced": {
                            "customName": "time list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "time_list",
                        "id": "42",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "related_findings_list:custom_function:related_findings_time"
                            }
                        }
                    },
                    "errors": {},
                    "id": "42",
                    "type": "utility",
                    "warnings": {},
                    "x": -100,
                    "y": 1860
                },
                "48": {
                    "data": {
                        "action": "refresh finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "refresh_finding_or_investigation_1",
                        "id": "48",
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "conditionKey": "condition_key_0",
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "48",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 660,
                    "y": -420
                },
                "49": {
                    "data": {
                        "action": "get finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_finding_or_investigation_1",
                        "id": "49",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "finding_time": "",
                            "id": "finding:investigation_id",
                            "map_consolidated_findings": "1"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "49",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 460,
                    "y": -220
                },
                "50": {
                    "data": {
                        "action": "update task in current phase",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "update_task_in_current_phase_2",
                        "id": "50",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "name": "Gather related findings",
                            "status": "Started",
                            "task_id": "get_task_id_1:action_result.data.*.task_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "50",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 440,
                    "y": 420
                },
                "53": {
                    "data": {
                        "advanced": {
                            "customName": "included_findings",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "included_findings",
                        "id": "53",
                        "inputParameters": [
                            "get_finding_or_investigation_1:action_result.data.*.consolidated_findings_map._raw"
                        ],
                        "outputVariables": [
                            "finding_id",
                            "intermediate_finding_id",
                            "findings_list"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "53",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    #phantom.debug(get_finding_or_investigation_1_result_item_0)\n    #phantom.debug(type(get_finding_or_investigation_1_result_item_0))\n    import json\n    import re\n\n    included_findings__finding_id = []\n    included_findings__intermediate_finding_id = []\n    final_result = {\n        \"finding_ids\": [],\n        \"intermediate_finding_ids\": []\n    }\n\n    # Loop through each dictionary in the list\n    for item in get_finding_or_investigation_1_result_item_0:\n        for long_key_string in item.keys():\n            matches = re.findall(r'(\\w+)=\"(.*?)\"', long_key_string)\n            for key, value in matches:\n                if key in [\"finding_ids\", \"intermediate_finding_ids\"]:\n                    final_result[key].append(value)\n\n    included_findings__findings_list = final_result[\"finding_ids\"]\n    included_findings__finding_id = final_result[\"finding_ids\"]\n    included_findings__intermediate_finding_id = final_result[\"intermediate_finding_ids\"]\n    \n    included_findings__finding_id = str(included_findings__finding_id).replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\\\"\")\n    included_findings__intermediate_finding_id = str(included_findings__intermediate_finding_id).replace(\"[\",\"\").replace(\"]\",\"\").replace(\"'\",\"\\\"\")\n    \n    phantom.debug(included_findings__finding_id)\n    phantom.debug(included_findings__intermediate_finding_id)\n    \n",
                    "warnings": {},
                    "x": 440,
                    "y": -80
                },
                "57": {
                    "data": {
                        "advanced": {
                            "customName": "format_findings_query",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_findings_query",
                        "id": "57",
                        "parameters": [
                            "included_findings_values:custom_function_result.data.output"
                        ],
                        "template": "`notable` | where event_id IN (\"{0}\")\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "57",
                    "type": "format",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 1120,
                    "y": 280
                },
                "59": {
                    "data": {
                        "action": "update finding or investigation",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "update_finding_or_investigation_2",
                        "id": "59",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "disposition:7",
                            "id": "included_findings:custom_function:findings_list",
                            "status": "Closed"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "59",
                    "type": "enterpriseSecurity",
                    "userCode": "\n    # Write your custom code here...\n    parameters = []\n    phantom.debug(included_findings__findings_list)\n    \n    for item in included_findings__findings_list:\n        phantom.debug(item)\n        parameters.append({\n            \"id\": item,\n            \"status\": \"Closed\",\n            \"disposition\": \"disposition:7\",\n        })\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 1000,
                    "y": 1820
                },
                "60": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_close_related_findings_1",
                        "id": "60",
                        "inputs": {
                            "findings_list": {
                                "datapaths": [
                                    "included_findings:custom_function:findings_list"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "close_related_findings",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "60",
                    "type": "playbook",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 920,
                    "y": 624.5
                },
                "61": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_event_1",
                        "id": "61",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "",
                            "event_ids": "open_findings_format:custom_function:open_finding_ids",
                            "integer_disposition": "7",
                            "status": "5",
                            "wait_for_confirmation": true
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "event_ids"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "61",
                    "type": "action",
                    "userCode": "\n    # Write your custom code here...\n    \n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 620,
                    "y": 1220
                },
                "62": {
                    "data": {
                        "advanced": {
                            "customName": "related findings status filter",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "run_query_1:action_result.data.*.status_label",
                                        "value": "Resolved"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "run_query_1:action_result.data.*.status_label",
                                        "value": "Closed"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_5",
                                "customName": "open findings",
                                "logic": "or"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "run_query_1:action_result.data.*.status_label",
                                        "value": "Closed"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "run_query_1:action_result.data.*.status_label",
                                        "value": "Resolved"
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_6",
                                "customName": "closed findings",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "related_findings_status_filter",
                        "id": "62",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "62",
                    "type": "filter",
                    "warnings": {},
                    "x": 500,
                    "y": 560
                },
                "63": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "customName": "",
                            "customNameId": -1,
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_3",
                        "id": "63",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "parameters": [
                                    "closed_findings:formatted_data"
                                ],
                                "template": "Findings that are already Closed Findings and are related to this investigation:\n\n{0}"
                            },
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Closed Findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "63",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 300,
                    "y": 860
                },
                "64": {
                    "data": {
                        "advanced": {
                            "customName": "format closed findings",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_closed_findings",
                        "id": "64",
                        "parameters": [
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.rule_name",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.event_id",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.status_label",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.owner"
                        ],
                        "template": "| Detection | Finding | Status | Owner |\n| --- | --- | --- | --- |\n%%\n| {0} | [{1}](https://i-0e6bc36a44836889b.splunk.show/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=-30d&latest=now&search={1}) | {2} | {3} |\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "64",
                    "type": "format",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 20,
                    "y": 900
                },
                "68": {
                    "data": {
                        "advanced": {
                            "customName": "open findings",
                            "customNameId": 1,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "open_findings_1",
                        "id": "68",
                        "parameters": [
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.rule_name",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.event_id",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.status_label",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.owner"
                        ],
                        "template": "| Detection | Finding | Status | Owner |\n| --- | --- | --- | --- |\n%%\n| {0} | [{1}](https://i-0e6bc36a44836889b.splunk.show/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=-30d&latest=now&event_id={1}) | {2} | {3} |\n%%\n\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "68",
                    "type": "format",
                    "warnings": {},
                    "x": 620,
                    "y": 720
                },
                "69": {
                    "data": {
                        "advanced": {
                            "customName": "closed findings",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "closed_findings",
                        "id": "69",
                        "parameters": [
                            "filtered-data:related_findings_status_filter:condition_2:run_query_1:action_result.data.*.rule_name",
                            "filtered-data:related_findings_status_filter:condition_2:run_query_1:action_result.data.*.event_id",
                            "filtered-data:related_findings_status_filter:condition_2:run_query_1:action_result.data.*.status_label",
                            "filtered-data:related_findings_status_filter:condition_2:run_query_1:action_result.data.*.owner"
                        ],
                        "template": "| Detection | Finding | Status | Owner |\n| --- | --- | --- | --- |\n%%\n| {0} | [{1}](https://i-0e6bc36a44836889b.splunk.show/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=-30d&latest=now&search={1}) | {2} | {3} |\n%%\n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "69",
                    "type": "format",
                    "warnings": {},
                    "x": 260,
                    "y": 720
                },
                "70": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "update_event_1:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_0",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "decision_2",
                        "id": "70",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "70",
                    "type": "decision",
                    "warnings": {},
                    "x": 700,
                    "y": 1340
                },
                "71": {
                    "data": {
                        "advanced": {
                            "customName": "open_findings_format",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "open_findings_format",
                        "id": "71",
                        "inputParameters": [
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.rule_name",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.event_id",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.status_label",
                            "filtered-data:related_findings_status_filter:condition_1:run_query_1:action_result.data.*.owner"
                        ],
                        "outputVariables": [
                            "open_findings_note",
                            "open_finding_ids"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "71",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    open_findings_format__open_finding_ids = []\n    if filtered_result_0_data_related_findings_status_filter:\n        note = (\n            \"\\n**Below are the list of open findings related to this investigation.**\\n\"\n            \"| Rule name | Finding | Status | Owner |\\n\"\n            \"| :--- | :--- | :--- | :--- |\\n\"\n        )\n        for rule_name,event_id,status,owner in zip(filtered_result_0_data___rule_name,filtered_result_0_data___event_id,filtered_result_0_data___status_label,filtered_result_0_data___owner):\n            #rule_name = rule_name.replace('\\n','')\n            #event_id = event_id.replace('\\n','')\n            finding_url = \"https://i-0e6bc36a44836889b.splunk.show/en-GB/app/SplunkEnterpriseSecuritySuite/incident_review?earliest=-30d&latest=now&event_id=\" + event_id\n            #status = status.replace('\\n','')\n            #owner = owner.replace('\\n','')\n            if status not in ('Closed', 'Resolved'):\n                phantom.debug(finding_url)\n                phantom.debug(status)\n                note += \"|{}|[{}]({})|{}|{}|\\n\".format(rule_name, event_id, finding_url, status, owner)\n                open_findings_format__open_finding_ids.append(event_id)\n\n        open_findings_format__open_findings_note = note\n    else:\n        open_findings_format__open_findings_note = \"\\n\\n**No open findings found in the investigation in last 30 days**\\n\"    \n\n\n",
                    "warnings": {},
                    "x": 620,
                    "y": 800
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "es",
        "python_version": "3.9",
        "schema": "5.0.20",
        "version": "6.4.1.361"
    },
    "create_time": "2025-06-24T03:51:57.695712+00:00",
    "draft_mode": false,
    "labels": [
        "es_soar_integration"
    ],
    "tags": []
}