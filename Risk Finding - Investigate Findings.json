{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_2_to_port_9",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_10",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_4",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_15_to_port_11",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_4_to_port_24",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "24",
                    "targetPort": "24_in"
                },
                {
                    "id": "port_25_to_port_5",
                    "sourceNode": "25",
                    "sourcePort": "25_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        },
                        {
                            "index": 1
                        },
                        {
                            "index": 2
                        },
                        {
                            "index": 3
                        },
                        {
                            "index": 4
                        }
                    ],
                    "id": "port_5_to_port_27",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "27",
                    "targetPort": "27_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        },
                        {
                            "index": 2
                        },
                        {
                            "index": 3
                        },
                        {
                            "index": 4
                        }
                    ],
                    "id": "port_29_to_port_15",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_38_to_port_29",
                    "sourceNode": "38",
                    "sourcePort": "38_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_39_to_port_29",
                    "sourceNode": "39",
                    "sourcePort": "39_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_40_to_port_29",
                    "sourceNode": "40",
                    "sourcePort": "40_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_41_to_port_29",
                    "sourceNode": "41",
                    "sourcePort": "41_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_42_to_port_29",
                    "sourceNode": "42",
                    "sourcePort": "42_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_29_to_port_13",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_11_to_port_43",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "43",
                    "targetPort": "43_in"
                },
                {
                    "id": "port_43_to_port_44",
                    "sourceNode": "43",
                    "sourcePort": "43_out",
                    "targetNode": "44",
                    "targetPort": "44_in"
                },
                {
                    "id": "port_44_to_port_45",
                    "sourceNode": "44",
                    "sourcePort": "44_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "id": "port_14_to_port_45",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "45",
                    "targetPort": "45_in"
                },
                {
                    "id": "port_0_to_port_47",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "47",
                    "targetPort": "47_in"
                },
                {
                    "id": "port_47_to_port_2",
                    "sourceNode": "47",
                    "sourcePort": "47_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_45_to_port_48",
                    "sourceNode": "45",
                    "sourcePort": "45_out",
                    "targetNode": "48",
                    "targetPort": "48_in"
                },
                {
                    "id": "port_48_to_port_1",
                    "sourceNode": "48",
                    "sourcePort": "48_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_24_to_port_40",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "40",
                    "targetPort": "40_in"
                },
                {
                    "id": "port_24_to_port_38",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "38",
                    "targetPort": "38_in"
                },
                {
                    "id": "port_24_to_port_39",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "39",
                    "targetPort": "39_in"
                },
                {
                    "id": "port_24_to_port_41",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "41",
                    "targetPort": "41_in"
                },
                {
                    "id": "port_24_to_port_42",
                    "sourceNode": "24",
                    "sourcePort": "24_out",
                    "targetNode": "42",
                    "targetPort": "42_in"
                }
            ],
            "hash": "1b712a12d682e67fcbec7ed6b8d150c94e384beb",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {
                        "input_spec": [
                            {
                                "name": "Name is required"
                            }
                        ]
                    },
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1020,
                    "y": -280.0000000000002
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 840,
                    "y": 2260
                },
                "10": {
                    "data": {
                        "action": "get task id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_task_id_1",
                        "id": "10",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id",
                            "phase_name": "Investigate",
                            "response_template_name": "refresh_finding_or_investigation_1:action_result.data.*.data.response_plans.*.name",
                            "task_name": "Investigate findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_name"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 980,
                    "y": 280
                },
                "11": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_task_note_1",
                        "id": "11",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 1,
                                "parameters": [
                                    "playbook_virustotal_v3_identifier_reputation_analysis_1:playbook_output:observable",
                                    "playbook_virustotal_v3_identifier_reputation_analysis_1:playbook_output:markdown_report"
                                ],
                                "template": "{0}\n\n\n{1}\n\n"
                            },
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Identifier Activity Analysis from Virustotal:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 420,
                    "y": 1520
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_encoded_powershell_investigation_1",
                        "id": "13",
                        "inputs": {
                            "powershell_process": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_2:process:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "encoded_powershell_investigation",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "playbook",
                    "warnings": {},
                    "x": 1460,
                    "y": 1340
                },
                "14": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_3",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": "playbook_encoded_powershell_investigation_1:playbook_output:note_content",
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": {
                                "functionId": 3,
                                "parameters": [
                                    "playbook_encoded_powershell_investigation_1:playbook_output:note_title"
                                ],
                                "template": "Malicious Powershell Analysis:  {0}\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 1460,
                    "y": 1460
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_VirusTotal_v3_Identifier_Reputation_Analysis_1",
                        "id": "15",
                        "inputs": {
                            "domain": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_5:domain:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "file_hash": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_1:file_hash:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "ip": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_3:ip:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "url": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_4:url:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "VirusTotal_v3_Identifier_Reputation_Analysis",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "playbook",
                    "warnings": {},
                    "x": 420,
                    "y": 1380
                },
                "2": {
                    "data": {
                        "action": "get finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_finding_or_investigation_1",
                        "id": "2",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "finding_time": "",
                            "id": "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id",
                            "map_consolidated_findings": "1"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 1000,
                    "y": 19.999999999999886
                },
                "24": {
                    "data": {
                        "advanced": {
                            "customName": "threat list",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "threat_list",
                        "id": "24",
                        "inputParameters": [
                            "run_query_1:action_result.data.*.threat_object_type",
                            "run_query_1:action_result.data.*.threat_object"
                        ],
                        "outputVariables": [
                            "threat_list",
                            "file_hash",
                            "ip",
                            "url",
                            "domain",
                            "process"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "24",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    \n\n    def is_domain_format(value):\n        # Check if it contains '.' but is not in IP address format\n        parts = value.split('.')\n        return len(parts) > 1 and not all(part.isdigit() and 0 <= int(part) <= 255 for part in parts)\n    \n    # Result lists\n    threat_object = []\n    threat_object_type = []\n    \n    finding_threat_objects__threat_object = []\n    finding_threat_objects__threat_object_type = []\n\n    result = []\n    threat_list__threat_list = []\n    # Iterate over the lists\n    for item1, item2 in zip(run_query_1_result_item_1, run_query_1_result_item_0):\n        phantom.debug(item1)\n        phantom.debug(item2)\n        if item1 is not None and item2 is not None:\n            if isinstance(item1, list) and isinstance(item2, list):\n                # If both items are lists, pair their elements individually\n                for sub_item1, sub_item2 in zip(item1, item2):\n                    threat_object.append(sub_item1)\n                    threat_object_type.append(sub_item2)\n            else:\n                # Otherwise, pair the elements directly\n                threat_object.append(item1)\n                threat_object_type.append(item2)\n                \n    # Iterate through both lists and remove None values and duplicates\n    seen = set()\n    for item1, item2 in zip(threat_object, threat_object_type):\n        if item1 is not None and item2 is not None:\n            phantom.debug(item1)\n            is_url = item1.startswith(\"http://\") or item1.startswith(\"https://\")\n            is_domain = not is_url and is_domain_format(item1)\n            if item2 == \"other\":\n                if is_url:\n                    item2 = \"url\"\n                elif is_domain:\n                    item2 = \"domain\"\n            pair = (item1, item2)\n            if pair not in seen:\n                finding_threat_objects__threat_object.append(item1)\n                finding_threat_objects__threat_object_type.append(item2)\n                seen.add(pair)\n    \n    \n    \n\n    threat_list__file_hash = []\n    threat_list__ip = []\n    threat_list__url = []\n    threat_list__domain = []\n    threat_list__process = []\n    \n    # Result list\n    result = []\n    threat_list__threat_list = []\n    # Iterate over the lists\n    for item1, item2 in zip(finding_threat_objects__threat_object, finding_threat_objects__threat_object_type):\n        if 'file_hash' in item1:\n            threat_list__file_hash.append(item2)\n        if 'ip' in item1:\n            threat_list__ip.append(item2)\n        if 'domain' in item1:\n            threat_list__domain.append(item2)\n        if 'url' in item1:\n            threat_list__url.append(item2)\n        if 'process' in item1:\n            threat_list__process.append(item2)\n\n    phantom.debug(threat_list__file_hash)\n    phantom.debug(threat_list__ip)\n    phantom.debug(threat_list__url)\n    phantom.debug(threat_list__domain)\n    phantom.debug(threat_list__process)\n",
                    "warnings": {},
                    "x": 980,
                    "y": 500
                },
                "25": {
                    "data": {
                        "advanced": {
                            "customName": "threat list items",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 9,
                        "functionName": "threat_list_items",
                        "id": "25",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:threat_list"
                            }
                        }
                    },
                    "errors": {},
                    "id": "25",
                    "type": "utility",
                    "userCode": "\n    # Write your custom code here...\n    parameters = []\n\n    parameters.append({\n        \"input_list\": threat_list__threat_list,\n    })\n\n",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 540,
                    "y": 620
                },
                "27": {
                    "data": {
                        "advanced": {
                            "customName": "threat indicator values",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "threat_indicator_values",
                        "id": "27",
                        "inputParameters": [
                            "filtered-data:threat_indicator_filter:condition_1:threat_list_items:custom_function_result.data.output",
                            "filtered-data:threat_indicator_filter:condition_2:threat_list_items:custom_function_result.data.output",
                            "filtered-data:threat_indicator_filter:condition_3:threat_list_items:custom_function_result.data.output",
                            "filtered-data:threat_indicator_filter:condition_4:threat_list_items:custom_function_result.data.output",
                            "filtered-data:threat_indicator_filter:condition_5:threat_list_items:custom_function_result.data.output"
                        ],
                        "outputVariables": [
                            "threat_indicator_hash",
                            "threat_indicator_ip",
                            "threat_indicator_domain",
                            "threat_indicator_url",
                            "threat_indicator_process"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "27",
                    "type": "code",
                    "userCode": "\n    # Write your custom code here...\n    import re\n    \n    threat_indicator_values__threat_indicator_hash = []\n    threat_indicator_values__threat_indicator_ip = []\n    threat_indicator_values__threat_indicator_domain = []\n    threat_indicator_values__threat_indicator_url = []\n    threat_indicator_values__threat_indicator_process = []\n    \n    if filtered_cf_result_0_data_output:\n        threat_indicator_values__threat_indicator_hash.append(filtered_cf_result_0_data_output[0][1])\n    else:\n        threat_indicator_values__threat_indicator_hash.append(None)\n        \n    if filtered_cf_result_1_data_output:\n        if '\"' in filtered_cf_result_1_data_output[0][1]:\n            escaped_process = re.sub(r'\"', r'\\\"', filtered_cf_result_1_data_output[0][1])\n            threat_indicator_values__threat_indicator_process.append(escaped_process)\n        else:\n            threat_indicator_values__threat_indicator_process.append(filtered_cf_result_1_data_output[0][1])\n    else:\n        threat_indicator_values__threat_indicator_process.append(None)\n    \n    if filtered_cf_result_2_data_output:\n        threat_indicator_values__threat_indicator_ip.append(filtered_cf_result_2_data_output[0][1])\n    else:\n        threat_indicator_values__threat_indicator_ip.append(None)\n\n    if filtered_cf_result_3_data_output:\n        threat_indicator_values__threat_indicator_url.append(filtered_cf_result_3_data_output[0][1])\n    else:\n        threat_indicator_values__threat_indicator_url.append(None)\n\n    if filtered_cf_result_4_data_output:\n        threat_indicator_values__threat_indicator_domain.append(filtered_cf_result_4_data_output[0][1])\n    else:\n        threat_indicator_values__threat_indicator_domain.append(None)\n    \n    phantom.debug(threat_indicator_values__threat_indicator_hash)\n    phantom.debug(threat_indicator_values__threat_indicator_process)\n    phantom.debug(threat_indicator_values__threat_indicator_ip)\n    phantom.debug(threat_indicator_values__threat_indicator_url)\n    phantom.debug(threat_indicator_values__threat_indicator_domain)\n    \n    \n\n",
                    "warnings": {},
                    "x": 540,
                    "y": 920
                },
                "29": {
                    "data": {
                        "advanced": {
                            "customName": "route investigation playbooks",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "file_hash:custom_function_result.data.output",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "hash ",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "!=",
                                        "param": "process:custom_function_result.data.output",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "process",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "!=",
                                        "param": "ip:custom_function_result.data.output",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "ip",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 3,
                                        "op": "!=",
                                        "param": "url:custom_function_result.data.output",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 3,
                                "customName": "url",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 4,
                                        "op": "!=",
                                        "param": "domain:custom_function_result.data.output",
                                        "value": "None"
                                    }
                                ],
                                "conditionIndex": 4,
                                "customName": "domain",
                                "logic": "and"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "route_investigation_playbooks",
                        "id": "29",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "29",
                    "type": "filter",
                    "warnings": {},
                    "x": 1020,
                    "y": 1280
                },
                "38": {
                    "data": {
                        "advanced": {
                            "customName": "ip",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 11,
                        "functionName": "ip",
                        "id": "38",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:ip"
                            }
                        }
                    },
                    "errors": {},
                    "id": "38",
                    "type": "utility",
                    "warnings": {},
                    "x": 440,
                    "y": 1120
                },
                "39": {
                    "data": {
                        "advanced": {
                            "customName": "file_hash",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 12,
                        "functionName": "file_hash",
                        "id": "39",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:file_hash"
                            }
                        }
                    },
                    "errors": {},
                    "id": "39",
                    "type": "utility",
                    "warnings": {},
                    "x": 720,
                    "y": 1140
                },
                "4": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "| from",
                            "end_time": "now",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.normalized_risk_object",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.info_min_time",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.info_max_time",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.risk_object_type"
                                ],
                                "template": " datamodel:Risk \n| search normalized_risk_object=\"{0}\" risk_object_type=\"{3}\" \n| where _time>={1} AND _time<={2}  | eval risk_event_id = if(isnull(risk_event_id), index + \"_\" + _cd + \"_\" + splunk_server, risk_event_id) | eventstats count by risk_event_id | where count < 2 \n| eval risk_message=coalesce(risk_message,source) \n| eval threat_zip = mvzip(threat_object, threat_object_type) \n| rename annotations.mitre_attack.mitre_technique_id as mitre_technique_id annotations.mitre_attack.mitre_tactic as mitre_tactic annotations.mitre_attack.mitre_technique as mitre_technique \n| fields - annotations* orig_sid orig_rid risk_factor* splunk_server host sourcetype tag threat_object* \n| stats list(risk_event_id) as risk_event_ids list(_time) as original_timestamps count as _event_count sum(calculated_risk_score) as _total_risk_score earliest(_time) as earliest latest(_time) as latest values(*) as * by search_name risk_message \n| where NOT (match(source, \"Splunk\\sSOAR\") AND _total_risk_score<=0) \n| fields mitre* _event_count _total_risk_score original_timestamps threat_zip risk_event_ids threat_object\n    [| rest /services/datamodel/model \n    | search eai:acl.app IN (Splunk_SA_CIM, SA-IdentityManagement, SA-NetworkProtection, SA-ThreatIntelligence, DA-ESS-ThreatIntelligence) \n    | fields description \n    | spath input=description path=objects{{}}.fields{{}}.fieldName \n    | spath input=description path=objects{{}}.calculations{{}}.outputFields{{}}.fieldName \n    | eval fieldNames=mvappend('objects{{}}.fields{{}}.fieldName', 'objects{{}}.calculations{{}}.outputFields{{}}.fieldName') \n    | stats values(fieldNames) as fieldNames \n    | mvexpand fieldNames \n    | regex fieldNames=\"^[_a-z]+$\" \n    | stats values(fieldNames) as search] \n| sort + latest \n| `uitime(earliest)` \n| `uitime(latest)` \n| eval _time=latest \n| rex field=threat_zip \"(?<threat_object>.*)\\,(?<threat_object_type>.*)\" \n| fields - threat_zip\n"
                            },
                            "search_mode": "verbose",
                            "start_time": "-365d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 380
                },
                "40": {
                    "data": {
                        "advanced": {
                            "customName": "domain",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 13,
                        "functionName": "domain",
                        "id": "40",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:domain"
                            }
                        }
                    },
                    "errors": {},
                    "id": "40",
                    "type": "utility",
                    "warnings": {},
                    "x": 1000,
                    "y": 1120
                },
                "41": {
                    "data": {
                        "advanced": {
                            "customName": "url",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 14,
                        "functionName": "url",
                        "id": "41",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:url"
                            }
                        }
                    },
                    "errors": {},
                    "id": "41",
                    "type": "utility",
                    "warnings": {},
                    "x": 1280,
                    "y": 1120
                },
                "42": {
                    "data": {
                        "advanced": {
                            "customName": "process",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 15,
                        "functionName": "process",
                        "id": "42",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "threat_list:custom_function:process"
                            }
                        }
                    },
                    "errors": {},
                    "id": "42",
                    "type": "utility",
                    "warnings": {},
                    "x": 1620,
                    "y": 1120
                },
                "43": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Splunk_Attack_Analyzer_Dynamic_Analysis_1",
                        "id": "43",
                        "inputs": {
                            "domain": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_4:url:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "hash": {
                                "datapaths": [
                                    ""
                                ],
                                "deduplicate": false
                            },
                            "url": {
                                "datapaths": [
                                    "filtered-data:route_investigation_playbooks:condition_4:url:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Splunk_Attack_Analyzer_Dynamic_Analysis",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "43",
                    "type": "playbook",
                    "warnings": {},
                    "x": 420,
                    "y": 1640
                },
                "44": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_task_note_2",
                        "id": "44",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 2,
                                "parameters": [
                                    "playbook_splunk_attack_analyzer_dynamic_analysis_1:playbook_output:observable",
                                    "playbook_splunk_attack_analyzer_dynamic_analysis_1:playbook_output:report"
                                ],
                                "template": "{0}\n\n\n{1}\n"
                            },
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "get_finding_or_investigation_1:action_result.data.*.response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Dynamic Analysis from Splunk Attack Analyzer:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "44",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 420,
                    "y": 1780
                },
                "45": {
                    "data": {
                        "action": "update task in current phase",
                        "actionType": "post",
                        "advanced": {
                            "join": [],
                            "notRequiredJoins": [
                                "add_task_note_3",
                                "add_task_note_2"
                            ]
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_task_in_current_phase_1",
                        "id": "45",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "get_finding_or_investigation_1:action_result.data.*.investigation_id",
                            "status": "Ended",
                            "task_id": "get_task_id_1:action_result.data.*.task_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "45",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 820,
                    "y": 1960
                },
                "47": {
                    "data": {
                        "action": "refresh finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "refresh_finding_or_investigation_1",
                        "id": "47",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "47",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 1010,
                    "y": -115.50000000000014
                },
                "48": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "run_query_2",
                        "id": "48",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "| makeresults",
                            "query": {
                                "functionId": 2,
                                "parameters": [
                                    "file_hash:custom_function_result.data.output",
                                    "ip:custom_function_result.data.output",
                                    "domain:custom_function_result.data.output",
                                    "url:custom_function_result.data.output",
                                    "process:custom_function_result.data.output",
                                    "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id"
                                ],
                                "template": "| eval threat_indicator_hash = \"{0}\"\n| eval threat_indicator_ip = \"{1}\"\n| eval threat_indicator_domain = \"{2}\"\n| eval threat_indicator_url = \"{3}\"\n| eval threat_indicator_process = \"{4}\"\n| fields threat_indicator_hash threat_indicator_ip threat_indicator_domain threat_indicator_url threat_indicator_process\n| `add_events({5})`\n"
                            },
                            "search_mode": "verbose"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "48",
                    "type": "action",
                    "userCode": "\n    # Write your custom code here...\n\n",
                    "warnings": {},
                    "x": 800,
                    "y": 2080
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "threat indicator filter",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "file_hash",
                                        "value": "threat_list_items:custom_function_result.data.output"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "hash reputation analysis",
                                "logic": "or"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "process",
                                        "value": "threat_list_items:custom_function_result.data.output"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "process analysis",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "ip",
                                        "value": "threat_list_items:custom_function_result.data.output"
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "ip reputation analysis",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 3,
                                        "op": "in",
                                        "param": "url",
                                        "value": "threat_list_items:custom_function_result.data.output"
                                    }
                                ],
                                "conditionIndex": 3,
                                "customName": "url analysis",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 4,
                                        "op": "in",
                                        "param": "domain",
                                        "value": "threat_list_items:custom_function_result.data.output"
                                    }
                                ],
                                "conditionIndex": 4,
                                "customName": "domain reputation analysis",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "threat_indicator_filter",
                        "id": "5",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "filter",
                    "warnings": {},
                    "x": 600,
                    "y": 720
                },
                "9": {
                    "data": {
                        "action": "get phase id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_phase_id_1",
                        "id": "9",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "refresh_finding_or_investigation_1:action_result.data.*.data.investigation_id",
                            "phase_name": "Investigate",
                            "response_template_name": "refresh_finding_or_investigation_1:action_result.data.*.data.response_plans.*.name"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 980,
                    "y": 179.9999999999997
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "es",
        "python_version": "3",
        "schema": "5.0.15",
        "version": "6.3.1.176"
    },
    "create_time": "2024-12-11T12:33:38.513495+00:00",
    "draft_mode": false,
    "labels": [
        "es_soar_integration"
    ],
    "tags": []
}