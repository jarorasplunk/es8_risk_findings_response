{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_2_to_port_9",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_10",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_4",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_8_to_port_12",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_12_to_port_1",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_14_to_port_1",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_15_to_port_11",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_16",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_15",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 3
                        }
                    ],
                    "id": "port_5_to_port_17",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_17_to_port_15",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 4
                        }
                    ],
                    "id": "port_5_to_port_18",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_18_to_port_15",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                }
            ],
            "hash": "53805d6d58e5661ddc105bbed2334fe8cc591db5",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {
                        "input_spec": [
                            {
                                "name": "Name is required"
                            }
                        ]
                    },
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": -40.00000000000008
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1400
                },
                "10": {
                    "data": {
                        "action": "get task id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_task_id_1",
                        "id": "10",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id",
                            "phase_name": "Investigate",
                            "response_template_name": "finding:response_plans.*.name",
                            "task_name": "Investigate findings"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "task_name"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 980,
                    "y": 399.9999999999999
                },
                "11": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "add_task_note_1",
                        "id": "11",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "functionId": 1,
                                "parameters": [
                                    "playbook_virustotal_v3_identifier_reputation_analysis_1:playbook_output:observable",
                                    "playbook_virustotal_v3_identifier_reputation_analysis_1:playbook_output:markdown_report"
                                ],
                                "template": "{0}\n\n\n{1}\n\n"
                            },
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": "Identifier Activity Analysis:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 720,
                    "y": 1180
                },
                "12": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "add_task_note_2",
                        "id": "12",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": {
                                "parameters": [],
                                "template": "Host investigation launched, please check the diag files returned from the host.\n"
                            },
                            "id": "finding:investigation_id",
                            "title": "Windows Host investigation:"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 1120,
                    "y": 1060
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_encoded_powershell_investigation_1",
                        "id": "13",
                        "inputs": {
                            "powershell_process": {
                                "datapaths": [
                                    "filtered-data:filter_1:condition_3:run_query_1:action_result.data.*.threat_object"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "encoded_powershell_investigation",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "playbook",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 1460,
                    "y": 900
                },
                "14": {
                    "data": {
                        "action": "add task note",
                        "actionType": "post",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "add_task_note_3",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "content": "playbook_encoded_powershell_investigation_1:playbook_output:note_content",
                            "id": "finding:investigation_id",
                            "phase_id": "get_phase_id_1:action_result.data.*.phase_id",
                            "response_plan_id": "finding:response_plans.*.id",
                            "task_id": "get_task_id_1:action_result.data.*.task_id",
                            "title": {
                                "functionId": 3,
                                "parameters": [
                                    "playbook_encoded_powershell_investigation_1:playbook_output:note_title"
                                ],
                                "template": "Malicious Powershell Analysis:  {0}\n"
                            }
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "title"
                            },
                            {
                                "data_type": "string",
                                "default": "",
                                "field": "content"
                            },
                            {
                                "data_type": "string",
                                "field": "task_id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_id"
                            },
                            {
                                "data_type": "string",
                                "field": "response_plan_id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 1480,
                    "y": 1040
                },
                "15": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_VirusTotal_v3_Identifier_Reputation_Analysis_1",
                        "id": "15",
                        "inputs": {
                            "domain": {
                                "datapaths": [
                                    "ip_and_domain_list:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "file_hash": {
                                "datapaths": [
                                    "hash_list:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "ip": {
                                "datapaths": [
                                    "ip_and_domain_list:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            },
                            "url": {
                                "datapaths": [
                                    "url_list:custom_function_result.data.output"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "VirusTotal_v3_Identifier_Reputation_Analysis",
                        "playbookRepo": 2,
                        "playbookRepoName": "local",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "playbook",
                    "warnings": {},
                    "x": 740,
                    "y": 1040
                },
                "16": {
                    "data": {
                        "advanced": {
                            "customName": "hash list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 1,
                        "functionName": "hash_list",
                        "id": "16",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "filtered-data:filter_1:condition_1:run_query_1:action_result.data.*.threat_object"
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "type": "utility",
                    "warnings": {},
                    "x": 320,
                    "y": 900
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "ip and domain list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "ip_and_domain_list",
                        "id": "17",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "filtered-data:filter_1:condition_4:run_query_1:action_result.data.*.threat_object"
                            }
                        }
                    },
                    "errors": {},
                    "id": "17",
                    "type": "utility",
                    "warnings": {},
                    "x": 800,
                    "y": 880
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "url list",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "list_demux",
                            "repoName": "community"
                        },
                        "functionId": 3,
                        "functionName": "url_list",
                        "id": "18",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "list_demux": {
                                "description": "Accepts a single list and converts it into multiple custom function output results. All output will be placed in the \"output\" datapath. Sub-items and sub-item variable names are dependent on the input.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "A list of objects. Nested lists are not unpacked.",
                                        "inputType": "item",
                                        "label": "input_list",
                                        "name": "input_list",
                                        "placeholder": "[\"list_item_1\", \"list_item_2\", \"list_item_3\"]",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "list_demux",
                                "name": "list_demux"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "list_demux": {
                                "input_list": "filtered-data:filter_1:condition_5:run_query_1:action_result.data.*.threat_object"
                            }
                        }
                    },
                    "errors": {},
                    "id": "18",
                    "type": "utility",
                    "warnings": {},
                    "x": 60,
                    "y": 860
                },
                "2": {
                    "data": {
                        "action": "get finding or investigation",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_finding_or_investigation_1",
                        "id": "2",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "finding_time": "",
                            "id": "finding:investigation_id",
                            "map_consolidated_findings": "1"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 980,
                    "y": 120
                },
                "4": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunk"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "command": "| from",
                            "end_time": "now",
                            "query": {
                                "functionId": 1,
                                "parameters": [
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.normalized_risk_object",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.info_min_time",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.info_max_time",
                                    "get_finding_or_investigation_1:action_result.data.*.consolidated_findings.risk_object_type"
                                ],
                                "template": " datamodel:Risk \n| search normalized_risk_object=\"{0}\" risk_object_type=\"{3}\" \n| where _time>={1} AND _time<={2}  | eval risk_event_id = if(isnull(risk_event_id), index + \"_\" + _cd + \"_\" + splunk_server, risk_event_id) | eventstats count by risk_event_id | where count < 2 \n| eval risk_message=coalesce(risk_message,source) \n| eval threat_zip = mvzip(threat_object, threat_object_type) \n| rename annotations.mitre_attack.mitre_technique_id as mitre_technique_id annotations.mitre_attack.mitre_tactic as mitre_tactic annotations.mitre_attack.mitre_technique as mitre_technique \n| fields - annotations* orig_sid orig_rid risk_factor* splunk_server host sourcetype tag threat_object* \n| stats list(risk_event_id) as risk_event_ids list(_time) as original_timestamps count as _event_count sum(calculated_risk_score) as _total_risk_score earliest(_time) as earliest latest(_time) as latest values(*) as * by search_name risk_message \n| where NOT (match(source, \"Splunk\\sSOAR\") AND _total_risk_score<=0) \n| fields mitre* _event_count _total_risk_score original_timestamps threat_zip risk_event_ids threat_object\n    [| rest /services/datamodel/model \n    | search eai:acl.app IN (Splunk_SA_CIM, SA-IdentityManagement, SA-NetworkProtection, SA-ThreatIntelligence, DA-ESS-ThreatIntelligence) \n    | fields description \n    | spath input=description path=objects{{}}.fields{{}}.fieldName \n    | spath input=description path=objects{{}}.calculations{{}}.outputFields{{}}.fieldName \n    | eval fieldNames=mvappend('objects{{}}.fields{{}}.fieldName', 'objects{{}}.calculations{{}}.outputFields{{}}.fieldName') \n    | stats values(fieldNames) as fieldNames \n    | mvexpand fieldNames \n    | regex fieldNames=\"^[_a-z]+$\" \n    | stats values(fieldNames) as search] \n| sort + latest \n| `uitime(earliest)` \n| `uitime(latest)` \n| eval _time=latest \n| rex field=threat_zip \"(?<threat_object>.*)\\,(?<threat_object_type>.*)\" \n| fields - threat_zip\n"
                            },
                            "search_mode": "verbose",
                            "start_time": "-365d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "default": "smart",
                                "field": "search_mode"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 980,
                    "y": 640
                },
                "5": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "in",
                                        "param": "hash,file_hash",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    },
                                    {
                                        "conditionIndex": 0,
                                        "op": "not in",
                                        "param": "process",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "hash reputation analysis",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "run_query_1:action_result.data.*.threat_object_type",
                                        "value": "process"
                                    },
                                    {
                                        "conditionIndex": 1,
                                        "op": "in",
                                        "param": "windows",
                                        "value": "run_query_1:action_result.data.*.risk_object_category"
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "process",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "process",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    },
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "file_hash",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    },
                                    {
                                        "conditionIndex": 2,
                                        "op": "in",
                                        "param": "hash",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    }
                                ],
                                "conditionIndex": 2,
                                "customName": "malicious powershell",
                                "logic": "and"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 3,
                                        "op": "in",
                                        "param": "ip",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    },
                                    {
                                        "conditionIndex": 3,
                                        "op": "in",
                                        "param": "domain",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    }
                                ],
                                "conditionIndex": 3,
                                "customName": "ip and domain rep analysis",
                                "logic": "or"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 4,
                                        "op": "in",
                                        "param": "url",
                                        "value": "run_query_1:action_result.data.*.threat_object_type"
                                    }
                                ],
                                "conditionIndex": 4,
                                "customName": "url list",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_1",
                        "id": "5",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "filter",
                    "warnings": {},
                    "x": 800,
                    "y": 660
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_internal_host_winrm_investigate_1",
                        "id": "8",
                        "inputs": {
                            "ip_or_hostname": {
                                "datapaths": [
                                    "filtered-data:filter_1:condition_2:run_query_1:action_result.data.*.risk_object"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "internal_host_winrm_investigate",
                        "playbookRepo": 1,
                        "playbookRepoName": "community",
                        "playbookType": "data",
                        "synchronous": true,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "playbook",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ],
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": 1120,
                    "y": 900
                },
                "9": {
                    "data": {
                        "action": "get phase id",
                        "actionType": "get",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": 191,
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_phase_id_1",
                        "id": "9",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "id": "finding:investigation_id",
                            "phase_name": "Investigate",
                            "response_template_name": "finding:response_plans.*.name"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "id"
                            },
                            {
                                "data_type": "string",
                                "field": "phase_name"
                            },
                            {
                                "data_type": "string",
                                "field": "response_template_name"
                            }
                        ],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 980,
                    "y": 259.9999999999999
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "es",
        "python_version": "3",
        "schema": "5.0.15",
        "version": "6.3.1.176"
    },
    "create_time": "2024-12-09T01:33:31.189355+00:00",
    "draft_mode": false,
    "labels": [
        "es_soar_integration"
    ],
    "tags": []
}