{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_9",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_2",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "id": "port_6_to_port_10",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_0",
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_13",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_14_to_port_10",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_3",
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_15",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_16_to_port_6",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                }
            ],
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 110,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 120,
                    "y": 1020
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Close Container",
                            "customNameId": 0,
                            "join": [],
                            "notRequiredJoins": [
                                "generate_random_number",
                                "playbook_Update_Alert_1"
                            ],
                            "refreshNotableData": true
                        },
                        "functionId": 1,
                        "functionName": "close_container",
                        "id": "10",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "set_status": {
                                "description": "",
                                "fields": [
                                    {
                                        "choices": "notableStatus",
                                        "description": "",
                                        "label": "status",
                                        "name": "status",
                                        "placeholder": "Select status",
                                        "renderType": "dropdown",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "set status",
                                "name": "set_status",
                                "refreshNotableData": true
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "set_status": {
                                "_internal": [
                                    "container",
                                    "trace"
                                ],
                                "status": "closed"
                            }
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "type": "utility",
                    "warnings": {},
                    "x": 100,
                    "y": 780
                },
                "13": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_1",
                        "id": "13",
                        "parameters": [
                            "generate_random_number:custom_function:random1_odds"
                        ],
                        "template": "Random number {0} did not trigger any auto triage this time.  \n",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "warnings": {},
                    "x": 440,
                    "y": 600
                },
                "14": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": null,
                        "functionId": 4,
                        "functionName": "add_comment_4",
                        "id": "14",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_1:formatted_data"
                            }
                        }
                    },
                    "errors": {},
                    "id": "14",
                    "type": "utility",
                    "warnings": {},
                    "x": 440,
                    "y": 744.5
                },
                "15": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_query_1",
                        "id": "15",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "add_raw_field": false,
                            "command": "search",
                            "display": "event_id",
                            "end_time": "-24h",
                            "query": "detection_type=ebd `notable` | where status_end=\"false\" | tail 2 | stats values(event_id) as event_id  | nomv event_id",
                            "search_mode": "smart",
                            "start_time": "-7d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "action",
                    "warnings": {},
                    "x": -240,
                    "y": 484.5
                },
                "16": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "regex_split",
                            "repoName": "community"
                        },
                        "functionId": 5,
                        "functionName": "regex_split_5",
                        "id": "16",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "regex_split": {
                                "description": "Use a regular expression to split an input_string into multiple items.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "The input string to split.",
                                        "inputType": "item",
                                        "label": "input_string",
                                        "name": "input_string",
                                        "placeholder": "string to split",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "The regular expression to use to split the string. Reserved regular expression characters should be escaped with a backslash, so '\\.' will match '.' and '\\\\\\\\' will match '\\'.",
                                        "inputType": "item",
                                        "label": "regex",
                                        "name": "regex",
                                        "placeholder": "[\\s.,;]+",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [],
                                        "description": "Either True or False to indicate whether or not to remove whitespace before and after each item. Defaults to True",
                                        "inputType": "item",
                                        "label": "strip_whitespace",
                                        "name": "strip_whitespace",
                                        "placeholder": "True",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "regex_split",
                                "name": "regex_split"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "regex_split": {
                                "input_string": "run_query_1:action_result.data.*.event_id",
                                "regex": " ",
                                "strip_whitespace": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "16",
                    "type": "utility",
                    "warnings": {},
                    "x": -260,
                    "y": 624.5
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "<",
                                        "param": "generate_random_number:custom_function:random1_odds",
                                        "value": "1"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_0",
                                "customName": "Do Nothing",
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_3",
                                "customName": "Proceed",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 180,
                    "y": 300
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Update_Alert_1",
                        "id": "6",
                        "inputs": {
                            "event_id": {
                                "datapaths": [
                                    "regex_split_5:custom_function_result.data.*.item"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "conditionKey": "condition_key_0",
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Update Alert",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "playbook",
                    "warnings": {},
                    "x": 0,
                    "y": 624
                },
                "8": {
                    "data": {
                        "action": "list findings",
                        "actionType": "get",
                        "advanced": {
                            "customName": "List Open Alerts",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "list_open_alerts",
                        "id": "8",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "Undetermined",
                            "earliest": "-7d",
                            "latest": "-24h",
                            "limit": "20",
                            "status": "New, In Progress"
                        },
                        "requiredParameters": [],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "enterpriseSecurity",
                    "warnings": {
                        "context": [
                            "Connect block to playbook flow."
                        ]
                    },
                    "x": -540,
                    "y": 500
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Generate Random Number",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "generate_random_number",
                        "id": "9",
                        "inputParameters": [],
                        "outputVariables": [
                            "random1_odds"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    import random\n    generate_random_number__random1_odds = random.randint(1, 100)\n\n",
                    "warnings": {},
                    "x": 90,
                    "y": 148
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "automation",
        "python_version": "3.9",
        "schema": "5.0.20",
        "version": "6.4.1.361"
    },
    "create_time": "2025-06-25T11:03:55.502688+00:00",
    "draft_mode": false,
    "labels": [
        "auto_triage",
        "generator"
    ],
    "tags": []
}