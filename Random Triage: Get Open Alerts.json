{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_0",
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_1",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_3",
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_5",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_5_to_port_6",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 1000,
                    "y": 419.9999999999999
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 1000,
                    "y": 1000
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "artifact:*.cef.random1_oods",
                                        "value": "true"
                                    },
                                    {
                                        "op": "==",
                                        "param": "artifact:*.cef.random2_oods",
                                        "value": "true"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_0",
                                "customName": "Do Nothing",
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_3",
                                "customName": "Proceed",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 1060,
                    "y": 644.5
                },
                "5": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Get Open Alerts",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_open_alerts",
                        "id": "5",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "add_raw_field": true,
                            "command": "search",
                            "display": "event_id,owner, status_label, disposition_label",
                            "end_time": "now",
                            "query": "\"e2e00310-0b22-4699-9c69-2efded776106@@notable@@e2e003100b2246999c692efded776106\" detection_type=ebd `notable` | where status_end=\"false\" | table event_id owner status* disposition*",
                            "search_mode": "smart",
                            "start_time": "-24h"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "warnings": {},
                    "x": 1520,
                    "y": 800
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Update_Alert_1",
                        "id": "6",
                        "inputs": {
                            "disposition_label": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef. disposition_label"
                                ],
                                "deduplicate": false
                            },
                            "event_id": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef.event_id"
                                ],
                                "deduplicate": false
                            },
                            "owner": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef.owner"
                                ],
                                "deduplicate": false
                            },
                            "random1": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef. random1"
                                ],
                                "deduplicate": false
                            },
                            "random2": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef. random2"
                                ],
                                "deduplicate": false
                            },
                            "status_label": {
                                "datapaths": [
                                    "get_open_alerts:artifact:*.cef. status_label"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Update Alert",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "playbook",
                    "warnings": {},
                    "x": 1520,
                    "y": 960
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "automation",
        "python_version": "3.9",
        "schema": "5.0.20",
        "version": "6.4.1.361"
    },
    "create_time": "2025-06-25T05:47:08.432585+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}