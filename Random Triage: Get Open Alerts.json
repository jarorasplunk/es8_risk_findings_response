{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_0",
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_1",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_6_to_port_1",
                    "sourceNode": "6",
                    "sourcePort": "6_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_3",
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_8",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_6",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "6",
                    "targetPort": "6_in"
                },
                {
                    "id": "port_0_to_port_9",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_2",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                }
            ],
            "hash": "b57c94578d217d37131e8d248a3a07d9395d4444",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 110,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 110,
                    "y": 772
                },
                "2": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "<",
                                        "param": "generate_random_number:custom_function:random1_odds",
                                        "value": "85"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_0",
                                "customName": "Do Nothing",
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_3",
                                "customName": "Proceed",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "decision_1",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 180,
                    "y": 300
                },
                "6": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "playbook_Update_Alert_1",
                        "id": "6",
                        "inputs": {
                            "disposition_label": {
                                "datapaths": [
                                    "list_open_alerts:action_result.data.*.items.*.disposition_label"
                                ],
                                "deduplicate": false
                            },
                            "event_id": {
                                "datapaths": [
                                    "list_open_alerts:action_result.data.*.items.*.event_id"
                                ],
                                "deduplicate": false
                            },
                            "owner": {
                                "datapaths": [
                                    "list_open_alerts:action_result.data.*.items.*.owner"
                                ],
                                "deduplicate": false
                            },
                            "random1": {
                                "datapaths": [
                                    "artifact:*.cef.random1"
                                ],
                                "deduplicate": false
                            },
                            "random2": {
                                "datapaths": [
                                    "artifact:*.cef.random2"
                                ],
                                "deduplicate": false
                            },
                            "status_label": {
                                "datapaths": [
                                    "list_open_alerts:action_result.data.*.items.*.status_label"
                                ],
                                "deduplicate": false
                            }
                        },
                        "loop": {
                            "conditions": [
                                {
                                    "comparisons": [
                                        {
                                            "conditionIndex": 0,
                                            "op": "==",
                                            "param": "",
                                            "value": ""
                                        }
                                    ],
                                    "conditionIndex": 0,
                                    "conditionKey": "condition_key_0",
                                    "display": "If",
                                    "logic": "and",
                                    "type": "if"
                                }
                            ],
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "playbookName": "Update Alert",
                        "playbookRepo": 3,
                        "playbookRepoName": "es8_risk_findings_response",
                        "playbookType": "data",
                        "synchronous": false,
                        "type": "playbook"
                    },
                    "errors": {},
                    "id": "6",
                    "type": "playbook",
                    "warnings": {
                        "config": [
                            "Reconfigure invalid datapath."
                        ]
                    },
                    "x": 0,
                    "y": 624
                },
                "8": {
                    "data": {
                        "action": "list findings",
                        "actionType": "get",
                        "advanced": {
                            "customName": "List Open Alerts",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Enterprise Security",
                        "connectorConfigs": [
                            "builtin_mc_connector"
                        ],
                        "connectorId": "7e971d03-6ae7-4429-b4e1-cf461003e75b",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "list_open_alerts",
                        "id": "8",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "disposition": "Undetermined",
                            "limit": "2"
                        },
                        "requiredParameters": [],
                        "type": "enterpriseSecurity"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "enterpriseSecurity",
                    "warnings": {},
                    "x": 0,
                    "y": 476
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Generate Random Number",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "generate_random_number",
                        "id": "9",
                        "inputParameters": [],
                        "outputVariables": [
                            "random1_odds"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "code",
                    "userCode": "\n    import random\n    generate_random_number__random1_odds = random.randint(1, 100)\n\n",
                    "warnings": {},
                    "x": 90,
                    "y": 148
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "automation",
        "python_version": "3.9",
        "schema": "5.0.20",
        "version": "6.4.1.361"
    },
    "create_time": "2025-06-25T08:22:35.597562+00:00",
    "draft_mode": false,
    "labels": [
        "auto_triage"
    ],
    "tags": []
}