{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Uncategorized",
    "coa": {
        "data": {
            "description": "",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_0",
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_3",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_4_to_port_1",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_3_to_port_8",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_4",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "conditions": [
                        {
                            "conditionKey": "condition_key_2",
                            "index": 1
                        }
                    ],
                    "id": "port_2_to_port_10",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_9",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_1",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "f17f7598187e60de9d23f47242c3e10cc8b15917",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "warnings": {},
                    "x": 190,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "warnings": {},
                    "x": 190,
                    "y": 786
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Decide Disposition",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "decide_disposition",
                        "id": "10",
                        "inputParameters": [],
                        "outputVariables": [
                            "disposition"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "code",
                    "userCode": "\n    import random\n    \n    try:\n        # Attempt to convert the input to an integer for numerical comparisons\n        random1 = random.randint(1, 10)\n        \n        # Apply the conditional logic to set the analyst\n        if random1 < 5:\n            decide_disposition__disposition = \"Benign Positive - Suspicious But Expected\"\n        elif random1 == 5:\n            decide_disposition__disposition = \"True Positive - Suspicious Activity\"\n        elif 6 <= random1 <= 7: # Checks if random1 is 6 or 7\n            decide_disposition__disposition = \"False Positive - Incorrect Analytic Logic\"\n        elif random1 == 8:\n            decide_disposition__disposition = \"False Positive - Inaccurate Data\"\n        elif random1 == 9:\n            decide_disposition__disposition = \"Other\"\n        else:\n            # Handle cases where random1 is outside the specified range (e.g., > 9 or < 0)\n            decide_disposition__disposition = \"Other\" # Assign a default or error value\n            \n    except (TypeError, ValueError) as e:\n        # Handle cases where the input 'random1' is not a valid integer\n        phantom.debug(f\"Error: {e}\")\n        decide_disposition__disposition = \"Other\" # Assign an error value if input is invalid\n\n\n",
                    "warnings": {},
                    "x": 340,
                    "y": 476
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Notable Status",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "playbook_input:status_label",
                                        "value": "New"
                                    }
                                ],
                                "conditionIndex": 0,
                                "conditionKey": "condition_key_0",
                                "customName": "New Notable",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "conditionKey": "condition_key_2",
                                "customName": "In progress",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "notable_status",
                        "id": "2",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "decision",
                    "warnings": {},
                    "x": 250,
                    "y": 148
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "Decide Analyst",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "decide_analyst",
                        "id": "3",
                        "inputParameters": [],
                        "outputVariables": [
                            "analyst"
                        ],
                        "type": "code"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "code",
                    "userCode": "\n    import random\n    \n    try:\n        # Attempt to convert the input to an integer for numerical comparisons\n        random1 = random.randint(1, 10)\n        \n        # Apply the conditional logic to set the analyst\n        if random1 < 4:\n            decide_analyst__analyst = \"jaejun@cisco.com\"\n        elif random1 == 4:\n            decide_analyst__analyst = \"dluxton@splunk.com\"\n        elif random1 <= 7: \n            decide_analyst__analyst = \"alice\"\n        elif random1 == 8:\n            decide_analyst__analyst = \"alice\"\n        elif random1 == 9:\n            decide_analyst__analyst = \"damo\"\n        else:\n            # Handle cases where random1 is outside the specified range (e.g., > 9 or < 0)\n            decide_analyst__analyst = \"wally\" # Assign a default or error value\n            \n    except (TypeError, ValueError) as e:\n        # Handle cases where the input 'random1' is not a valid integer\n        phantom.debug(f\"Error: {e}\")\n        decide_analyst__analyst = \"input_error\" # Assign an error value if input is invalid\n\n",
                    "warnings": {},
                    "x": 0,
                    "y": 320
                },
                "4": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Update Alert In Progress",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "update_alert_in_progress",
                        "id": "4",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "comment": {
                                "functionId": 1,
                                "parameters": [
                                    "decide_analyst:custom_function:analyst"
                                ],
                                "template": "Investigating this one now. \n{0}\n"
                            },
                            "event_ids": "playbook_input:event_id",
                            "integer_status": "2",
                            "owner": "decide_analyst:custom_function:analyst",
                            "status": ""
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "event_ids"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "warnings": {},
                    "x": 0,
                    "y": 624
                },
                "8": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "debug",
                            "repoName": "community"
                        },
                        "functionId": 2,
                        "functionName": "debug_2",
                        "id": "8",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "debug": {
                                "description": "Print debug messages with the type and value of 0-10 different inputs. This is useful for checking the values of input data or the outputs of other playbook blocks.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_1",
                                        "name": "input_1",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_2",
                                        "name": "input_2",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_3",
                                        "name": "input_3",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_4",
                                        "name": "input_4",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_5",
                                        "name": "input_5",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_6",
                                        "name": "input_6",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_7",
                                        "name": "input_7",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_8",
                                        "name": "input_8",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_9",
                                        "name": "input_9",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "dataTypes": [
                                            "*"
                                        ],
                                        "description": "",
                                        "inputType": "list",
                                        "label": "input_10",
                                        "name": "input_10",
                                        "placeholder": "",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "debug",
                                "name": "debug"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "debug": {
                                "input_1": [
                                    "decide_analyst:custom_function:analyst"
                                ],
                                "input_10": null,
                                "input_2": null,
                                "input_3": null,
                                "input_4": null,
                                "input_5": null,
                                "input_6": null,
                                "input_7": null,
                                "input_8": null,
                                "input_9": null
                            }
                        }
                    },
                    "errors": {},
                    "id": "8",
                    "type": "utility",
                    "warnings": {},
                    "x": 0,
                    "y": 476
                },
                "9": {
                    "data": {
                        "action": "update event",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Update Alert Closed",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "es"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "update_alert_closed",
                        "id": "9",
                        "loop": {
                            "enabled": false,
                            "exitAfterUnit": "m",
                            "exitAfterValue": 10,
                            "exitConditionEnabled": false,
                            "exitLoopAfter": 2,
                            "pauseUnit": "m",
                            "pauseValue": 2
                        },
                        "parameters": {
                            "comment": {
                                "parameters": [
                                    "decide_disposition:custom_function:disposition",
                                    "playbook_input:owner"
                                ],
                                "template": "This one is a {0}\n{1}\n"
                            },
                            "disposition": "decide_disposition:custom_function:disposition",
                            "event_ids": "playbook_input:event_id",
                            "integer_status": "",
                            "status": "closed"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "event_ids"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "warnings": {},
                    "x": 340,
                    "y": 631
                }
            },
            "notes": ""
        },
        "input_spec": [
            {
                "contains": [],
                "description": "Alert ID",
                "name": "event_id"
            },
            {
                "contains": [],
                "description": "",
                "name": "owner"
            },
            {
                "contains": [],
                "description": "",
                "name": "status_label"
            }
        ],
        "output_spec": null,
        "playbook_trigger": "artifact_created",
        "playbook_type": "data",
        "python_version": "3.9",
        "schema": "5.0.20",
        "version": "6.4.1.361"
    },
    "create_time": "2025-06-25T08:48:41.050737+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}